@{
    ViewData["Title"] = "User Dashboard";
}

<h2>User Dashboard</h2>

<p>Welcome to your dashboard. Here you can manage your appointments, view test results, and more.</p>

@*

@using MedLab.Models
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager

@{
    var user = UserManager.GetUserAsync(User).Result;
    var dbContext = Context.RequestServices.GetRequiredService<ApplicationDbContext>();
    var profile = dbContext.Users.FirstOrDefault(u => u.Email == user.Email);

    ViewData["Title"] = "User Dashboard";
}

<h2>User Dashboard</h2>

<p>Welcome to your dashboard, @profile.Name. Here you can view and edit your profile information.</p>

<div class="card">
    <div class="card-header">
        Profile Information
    </div>
    <div class="card-body">
        <form method="post" asp-controller="Users" asp-action="UpdateProfile">
            <input type="hidden" name="Id" value="@profile.Id" />
            <div class="mb-3">
                <label for="Name" class="form-label">Name</label>
                <input type="text" class="form-control" id="Name" name="Name" value="@profile.Name" />
            </div>
            <div class="mb-3">
                <label for="Age" class="form-label">Age</label>
                <input type="number" class="form-control" id="Age" name="Age" value="@profile.Age" />
            </div>
            <div class="mb-3">
                <label for="Gender" class="form-label">Gender</label>
                <select class="form-control" id="Gender" name="Gender">
                    <option value="MALE" @(profile.Gender == Gender.MALE ? "selected" : "")>Male</option>
                    <option value="FEMALE" @(profile.Gender == Gender.FEMALE ? "selected" : "")>Female</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="PhoneNumber" class="form-label">Phone Number</label>
                <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber" value="@profile.PhoneNumber" />
            </div>
            <div class="mb-3">
                <label for="Email" class="form-label">Email</label>
                <input type="email" class="form-control" id="Email" name="Email" value="@profile.Email" readonly />
            </div>
            <div class="mb-3">
                <label for="Address" class="form-label">Address</label>
                <input type="text" class="form-control" id="Address" name="Address" value="@profile.Address" />
            </div>
            <div class="mb-3">
                <label for="StateId" class="form-label">State</label>
                <select class="form-control" id="StateId" name="StateId">
                    @foreach (var state in dbContext.States)
                    {
                        <option value="@state.Id" @(profile.StateId == state.Id ? "selected" : "")>@state.Name</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="CityId" class="form-label">City</label>
                <select class="form-control" id="CityId" name="CityId">
                    @foreach (var city in dbContext.Cities)
                    {
                        <option value="@city.Id" @(profile.CityId == city.Id ? "selected" : "")>@city.Name</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="BloodGroup" class="form-label">Blood Group</label>
                <select class="form-control" id="BloodGroup" name="BloodGroup">
                    @foreach (var bg in Enum.GetValues(typeof(BloodGroup)))
                    {
                        <option value="@bg" @(profile.BloodGroup == (BloodGroup)bg ? "selected" : "")>@bg</option>
                    }
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
        </form>
    </div>
</div>

@using MedLab.Models
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager

@{
    var user = UserManager.GetUserAsync(User).Result;
    var dbContext = Context.RequestServices.GetRequiredService<ApplicationDbContext>();
    var profile = dbContext.Users.FirstOrDefault(u => u.Email == user.Email);

    ViewData["Title"] = "User Dashboard";
}

<h2>User Dashboard</h2>

<p>Welcome to your dashboard, @profile.Name. Here you can view and edit your profile information.</p>

<div class="card">
    <div class="card-header">
        Profile Information
    </div>
    <div class="card-body">
        <form method="post" asp-controller="Users" asp-action="UpdateProfile">
            <input type="hidden" name="Id" value="@profile.Id" />
            <div class="mb-3">
                <label for="Name" class="form-label">Name</label>
                <input type="text" class="form-control" id="Name" name="Name" value="@profile.Name" />
            </div>
            <div class="mb-3">
                <label for="Age" class="form-label">Age</label>
                <input type="number" class="form-control" id="Age" name="Age" value="@profile.Age" />
            </div>
            <div class="mb-3">
                <label for="Gender" class="form-label">Gender</label>
                <select class="form-control" id="Gender" name="Gender">
                    <option value="MALE" @(profile.Gender == Gender.MALE ? "selected" : "")>Male</option>
                    <option value="FEMALE" @(profile.Gender == Gender.FEMALE ? "selected" : "")>Female</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="PhoneNumber" class="form-label">Phone Number</label>
                <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber" value="@profile.PhoneNumber" />
            </div>
            <div class="mb-3">
                <label for="Email" class="form-label">Email</label>
                <input type="email" class="form-control" id="Email" name="Email" value="@profile.Email" readonly />
            </div>
            <div class="mb-3">
                <label for="Address" class="form-label">Address</label>
                <input type="text" class="form-control" id="Address" name="Address" value="@profile.Address" />
            </div>
            <div class="mb-3">
                <label for="StateId" class="form-label">State</label>
                <select class="form-control" id="StateId" name="StateId">
                    @foreach (var state in dbContext.States)
                    {
                        <option value="@state.Id" @(profile.StateId == state.Id ? "selected" : "")>@state.Name</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="CityId" class="form-label">City</label>
                <select class="form-control" id="CityId" name="CityId">
                    @foreach (var city in dbContext.Cities)
                    {
                        <option value="@city.Id" @(profile.CityId == city.Id ? "selected" : "")>@city.Name</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="BloodGroup" class="form-label">Blood Group</label>
                <select class="form-control" id="BloodGroup" name="BloodGroup">
                    @foreach (var bg in Enum.GetValues(typeof(BloodGroup)))
                    {
                        <option value="@bg" @(profile.BloodGroup == (BloodGroup)bg ? "selected" : "")>@bg</option>
                    }
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
        </form>
    </div>
</div>
*@